g++ compile completed
g++ object files completed
pvp clicked.
res menu = 2
pvp is on
			tttgame::tttgame(int playerid,int computerid)	


 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
		mouse is clicked on sprite i=4+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,1,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=4



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
		mouse is clicked on sprite i=8+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,1,0]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=8



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
		mouse is clicked on sprite i=5+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,1,1]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=5



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
		mouse is clicked on sprite i=3+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [2,1,1]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=3



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
		mouse is clicked on sprite i=1+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,0]
y = [2,1,1]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=1



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
		mouse is clicked on sprite i=0+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [2,1,0]
y = [2,1,1]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=0



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
		mouse is clicked on sprite i=2+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [2,1,1]
y = [2,1,1]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=2



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
		mouse is clicked on sprite i=7+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [2,1,1]
y = [2,1,1]
z = [0,2,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=7



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
		mouse is clicked on sprite i=6+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [2,1,1]
y = [2,1,1]
z = [1,2,2]
			int tttgame::gameResultCheck()	player 1 won by raw xyz 357
player1 move applied to ui cellid-1=6



 game is not end.
			 int tttgame::getRoundCounter()	10

sounds like cells are full, game end.
			int tttgame::gameResultCheck()	player 1 won by raw xyz 357



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
		mouse is clicked on sprite i=4+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=4



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
		mouse is clicked on sprite i=5+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,1]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=5



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
		mouse is clicked on sprite i=8+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,1]
z = [0,0,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=8



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
		mouse is clicked on sprite i=7+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,1]
z = [0,1,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=7



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
		mouse is clicked on sprite i=6+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=6



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
		mouse is clicked on sprite i=2+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,1]
y = [0,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=2



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
		mouse is clicked on sprite i=1+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,2,1]
y = [0,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=1



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
		mouse is clicked on sprite i=0+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,2,1]
y = [0,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=0



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
		mouse is clicked on sprite i=3+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,2,1]
y = [2,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	[GAME END] game is draw.
player2 move applied to ui cellid-1=3



 game is not end.
			 int tttgame::getRoundCounter()	10

sounds like cells are full, game end.
			int tttgame::gameResultCheck()	[GAME END] game is draw.
result code = 3 = (game is draw)



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
		mouse is clicked on sprite i=3+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [1,0,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=3



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
		mouse is clicked on sprite i=4+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [1,2,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=4



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
		mouse is clicked on sprite i=5+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [1,2,1]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=5



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
		mouse is clicked on sprite i=1+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,2,0]
y = [1,2,1]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=1



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
		mouse is clicked on sprite i=7+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,2,0]
y = [1,2,1]
z = [0,1,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=7



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
		mouse is clicked on sprite i=8+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,2,0]
y = [1,2,1]
z = [0,1,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=8



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
		mouse is clicked on sprite i=0+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,2,0]
y = [1,2,1]
z = [0,1,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=0



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
		mouse is clicked on sprite i=6+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,2,0]
y = [1,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=6



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
		mouse is clicked on sprite i=2+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,2,1]
y = [1,2,1]
z = [2,1,2]
			int tttgame::gameResultCheck()	[GAME END] game is draw.
player1 move applied to ui cellid-1=2



 game is not end.
			 int tttgame::getRoundCounter()	10

sounds like cells are full, game end.
			int tttgame::gameResultCheck()	[GAME END] game is draw.
result code = 3 = (game is draw)



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
		mouse is clicked on sprite i=4+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=4



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	1

player1 (x) turn to move.
		mouse is clicked on sprite i=1+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,0]
y = [0,2,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=1



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	2

player2 (o) turn to move.
		mouse is clicked on sprite i=2+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [0,2,0]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=2



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	3

player1 (x) turn to move.
		mouse is clicked on sprite i=6+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [0,2,0]
z = [1,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=6



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	4

player2 (o) turn to move.
		mouse is clicked on sprite i=8+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [0,2,0]
z = [1,0,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=8



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	5

player1 (x) turn to move.
		mouse is clicked on sprite i=7+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [0,2,0]
z = [1,1,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=7



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	6

player2 (o) turn to move.
		mouse is clicked on sprite i=3+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [2,2,0]
z = [1,1,2]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=3



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	7

player1 (x) turn to move.
		mouse is clicked on sprite i=0+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,1,2]
y = [2,2,0]
z = [1,1,2]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=0



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	8

player2 (o) turn to move.
		mouse is clicked on sprite i=5+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [1,1,2]
y = [2,2,2]
z = [1,1,2]
			int tttgame::gameResultCheck()	player 2 won by raw y
player2 move applied to ui cellid-1=5



 game is not end.
			 int tttgame::getRoundCounter()	10

sounds like cells are full, game end.
			int tttgame::gameResultCheck()	player 2 won by raw y



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	0

player1 (x) turn to move.
		mouse is clicked on sprite i=5+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,0,1]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=5



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	1

player2 (o) turn to move.
		mouse is clicked on sprite i=4+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [0,2,1]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=4



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	2

player1 (x) turn to move.
		mouse is clicked on sprite i=3+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [1,2,1]
z = [0,0,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=3



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	3

player2 (o) turn to move.
		mouse is clicked on sprite i=7+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,0,0]
y = [1,2,1]
z = [0,2,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=7



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	4

player1 (x) turn to move.
		mouse is clicked on sprite i=1+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,0]
y = [1,2,1]
z = [0,2,0]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=1



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	5

player2 (o) turn to move.
		mouse is clicked on sprite i=2+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [1,2,1]
z = [0,2,0]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=2



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	6

player1 (x) turn to move.
		mouse is clicked on sprite i=8+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [0,1,2]
y = [1,2,1]
z = [0,2,1]
			int tttgame::gameResultCheck()	game is continue
player1 move applied to ui cellid-1=8



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	7

player2 (o) turn to move.
		mouse is clicked on sprite i=0+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [2,1,2]
y = [1,2,1]
z = [0,2,1]
			int tttgame::gameResultCheck()	game is continue
player2 move applied to ui cellid-1=0



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player1 MOVE REJECTED.
player1 please enter aviable cell. ur turn again...



 game is not end.
			 int tttgame::getRoundCounter()	8

player1 (x) turn to move.
		mouse is clicked on sprite i=6+1
			int tttgame::move(int playerid,int cellid)				void tttgame::consoleLog()	
- - - - - - - - - - Game Status - - - - - - - - - -
x = [2,1,2]
y = [1,2,1]
z = [1,2,1]
			int tttgame::gameResultCheck()	[GAME END] game is draw.
player1 move applied to ui cellid-1=6



 game is not end.
			 int tttgame::getRoundCounter()	10

sounds like cells are full, game end.
			int tttgame::gameResultCheck()	[GAME END] game is draw.
result code = 3 = (game is draw)



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
player2 MOVE REJECTED/HAS PROBLEM.



 game is not end.
			 int tttgame::getRoundCounter()	0

player2 (o) turn to move.
			int tttgame::move(int playerid,int cellid)	[INVALID INPUT] cell id -1 is invalid.
